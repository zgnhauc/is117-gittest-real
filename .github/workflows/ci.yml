name: Auto-Grade Git Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering from Actions tab

jobs:
  grade:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history for commit analysis
    
    - name: Check Commit Count
      run: |
        COMMIT_COUNT=$(git log --oneline | wc -l)
        echo "Total commits: $COMMIT_COUNT"
        if [ $COMMIT_COUNT -lt 15 ]; then
          echo "‚ùå FAIL: Need at least 15 commits (found $COMMIT_COUNT)"
          exit 1
        fi
        echo "‚úÖ PASS: Commit count ($COMMIT_COUNT >= 15)"
    
    - name: Check Commit Messages
      run: |
        INVALID=$(git log --pretty=format:"%s" | grep -v -E "^(docs:|chore:|fix:)" || true)
        if [ ! -z "$INVALID" ]; then
          echo "‚ùå FAIL: Some commits don't start with doc:, chore:, or fix:"
          echo "$INVALID"
          exit 1
        fi
        echo "‚úÖ PASS: All commits have proper prefixes"
    
    - name: Check Branch Count
      run: |
        BRANCH_COUNT=$(git branch -a | grep -E "question-[0-9]+" | wc -l)
        echo "Question branches found: $BRANCH_COUNT"
        if [ $BRANCH_COUNT -lt 15 ]; then
          echo "‚ùå FAIL: Need 15 question branches (found $BRANCH_COUNT)"
          exit 1
        fi
        echo "‚úÖ PASS: All 15 branches created"
    
    - name: Check Merge Commits
      run: |
        MERGE_COUNT=$(git log --merges --oneline | wc -l)
        echo "Merge commits: $MERGE_COUNT"
        if [ $MERGE_COUNT -lt 15 ]; then
          echo "‚ö†Ô∏è  WARNING: Expected 15 merge commits (found $MERGE_COUNT)"
          echo "This is OK if you used fast-forward merges"
        else
          echo "‚úÖ PASS: All merges detected"
        fi
    
    - name: Check Answer Files
      run: |
        for i in $(seq -f "%02g" 1 15); do
          FILE="answers/question-$i.md"
          if [ ! -f "$FILE" ]; then
            echo "‚ùå FAIL: Missing $FILE"
            exit 1
          fi
          WORDS=$(wc -w < "$FILE")
          if [ $WORDS -lt 10 ]; then
            echo "‚ùå FAIL: $FILE too short (${WORDS} words, need 10+)"
            exit 1
          fi
          echo "‚úÖ $FILE exists ($WORDS words)"
        done
        echo "‚úÖ PASS: All 15 answer files present with content"
    
    - name: Grade Summary
      run: |
        echo "================================"
        echo "üéì AUTO-GRADE COMPLETE"
        echo "================================"
        echo "‚úÖ Commits: PASS"
        echo "‚úÖ Prefixes: PASS"
        echo "‚úÖ Branches: PASS"
        echo "‚úÖ Files: PASS"
        echo "================================"
        echo "Grade: 100/100"
        echo "================================"
